---

- shell:
    cmd: "hostname {{ inventory_hostname }}"
  when: inventory_hostname != ansible_hostname
- shell:
    cmd: "echo {{ inventory_hostname }} > /etc/hostname"
  when: inventory_hostname != ansible_hostname

- name: Update apt cache
  apt:
    force_apt_get: yes
    update_cache: yes
  register: apt_action
  retries: 100
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

- name: Install Prerequisites
  apt:
    name: aptitude
    state: latest
    force_apt_get: yes
    update_cache: yes
    cache_valid_time: 3600
  register: apt_action
  retries: 100
#  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)
  until: apt_action is success

# Sudo Group Setup
- name: Make sure we have a 'wheel' group
  group:
    name: wheel
    state: present

- name: Allow 'wheel' group to have passwordless sudo
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: '/usr/sbin/visudo -cf %s'

# User + Key Setup
- name: Create a new regular users with sudo privileges
  user:
    name: "{{ item }}"
    state: present
    groups: wheel
    append: true
    create_home: true
    shell: /bin/bash
  with_items:
    - "{{ create_user }}"
    - "ansible"

- name: Set authorized key for remote users
  authorized_key:
    user: "{{ item }}"
    state: present
    key: "{{ copy_local_key }}"
  with_items:
    - "{{ create_user }}"
    - "ansible"

- name: Limit root login
  lineinfile:
    path: /etc/ssh/sshd_config
    state: present
    regexp: '^#?PermitRootLogin'
    line: 'PermitRootLogin prohibit-password'  # TODO: set this to no and get ansible to work with newly created user

- name: Enable pubkey authentication
  lineinfile:
    path: /etc/ssh/sshd_config
    state: present
    regexp: '^#?PubkeyAuthentication'
    line: 'PubkeyAuthentication yes'

- name: Disable password authentication
  lineinfile:
    path: /etc/ssh/sshd_config
    state: present
    regexp: '^#?PasswordAuthentication'
    line: 'PasswordAuthentication no'

- name: Disable empty password permission
  lineinfile:
    path: /etc/ssh/sshd_config
    state: present
    regexp: '^#?PermitEmptyPasswords'
    line: 'PermitEmptyPasswords no'

- name: Whitelist SSH users
  lineinfile:
    path: /etc/ssh/sshd_config
    state: present
    regexp: '^#?AllowUsers'
    line: "AllowUsers {{ [create_user, ansible_ssh_user, 'ansible'] | unique| join(' ') }}"

- name: Limit max authentication attempts
  lineinfile:
    path: /etc/ssh/sshd_config
    state: present
    regexp: '^#?MaxAuthTries'
    line: 'MaxAuthTries 3'

- name: Install required system packages
  apt:
    name: "{{ sys_packages }}"
    state: latest
    update_cache: yes
    cache_valid_time: 3600
  register: apt_action
  retries: 100
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

- include_tasks: firewall.yml
