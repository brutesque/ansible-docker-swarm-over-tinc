---

- name: Create admin password hash for stack
  set_fact:
    admin_password_hash: "{{ admin_password | password_hash('blowfish', rounds=12, salt=['proxy', fingerprint, filetime_result.stdout] | join('|') | hash('sha1') | truncate(21, True, '') + '.') }}"
  run_once: true

- name: Add label to entrypoints
  docker_node:
    hostname: "{{ hostvars[item]['inventory_hostname'] }}"
    labels:
      traefik: 'true'
  loop: "{{ groups['entrypoints'] }}"
  run_once: true

- name: Remove label from non-entrypoints
  docker_node:
    hostname: "{{ item }}"
    labels_to_remove:
      - traefik
  when: item not in groups['entrypoints']
  loop: "{{ groups['swarm'] }}"

- name: Create network for the reverse-proxy
  docker_network:
    state: present
    name: traefik-public
    scope: swarm
    driver: overlay
    attachable: yes
  run_once: true

- name: Create traefik secret
  docker_secret:
    name: traefik-pass
    data: "{{ ['admin', admin_password_hash] | join(':') | b64encode }}"
    data_is_b64: true
    state: present
  run_once: true

- file:
    state: directory
    path: /opt/stacks/proxy/secrets
    mode: '0600'
  run_once: true

- name: Copy consul stack file
  copy:
    src: files/proxy-consul.stack.yml
    dest: /opt/stacks/proxy/docker-compose.consul.yml
    mode: '0600'
  run_once: true

- name: Copy traefik stack file
  copy:
    src: files/proxy-traefik.stack.yml
    dest: /opt/stacks/proxy/docker-compose.traefik.yml
    mode: '0600'
  run_once: true

- name: Copy acme data if it exists locally
  copy:
    src: "secrets/backups/acme.json"
    dest: "/opt/stacks/proxy/secrets/acme.json"
    mode: '0600'
  run_once: true
  ignore_errors: yes
  register: acme_copy_result
  no_log: True

- name: Deploy the consul services from the proxy stack
  docker_stack:
    state: present
    name: proxy
    compose:
      - /opt/stacks/proxy/docker-compose.consul.yml
  environment:
    DOMAIN: "admin.{{ domain_name }}"
  run_once: true

- name: check for acme data in consul
  shell:
    cmd: "docker run --rm --network proxy_consul-network --env 'CONSUL_HTTP_ADDR=consul-leader:8500' consul:1.8.3 kv get -base64 traefik/acme/account/object | cut --characters=1-9"
  register: get_acme_result
  until: "'Error querying Consul agent' not in get_acme_result.stderr"
  retries: 60
  delay: 5
  changed_when: false
  failed_when: "get_acme_result.stderr != '' and 'Error! No key exists' not in get_acme_result.stderr"
  when: acme_copy_result.failed == false

- name: push acme data to consul
  shell:
    cmd: "docker run --rm --network proxy_consul-network --env 'CONSUL_HTTP_ADDR=consul-leader:8500' consul:1.8.3 kv put -base64 traefik/acme/account/object $(cat /opt/stacks/proxy/secrets/acme.json | gzip | base64 --wrap=0)"
  register: kv_put_result
  when: acme_copy_result.failed == false and "Error! No key exists" in get_acme_result.stderr

- name: create empty lock in consul
  shell:
    cmd: "docker run --rm --network proxy_consul-network --env 'CONSUL_HTTP_ADDR=consul-leader:8500' consul:1.8.3 kv put traefik/acme/account/lock"
  register: kv_put_result
  when: acme_copy_result.failed == false and "Error! No key exists" in get_acme_result.stderr

- name: Deploy the traefik services from the proxy stack
  docker_stack:
    state: present
    name: proxy
    compose:
      - /opt/stacks/proxy/docker-compose.traefik.yml
  environment:
    EMAIL: "{{ ca_email }}"
    DOMAIN: "admin.{{ domain_name }}"
    CA_SERVER: "{{ ca_server }}"
  run_once: true
