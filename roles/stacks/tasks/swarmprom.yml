---

- name: Create admin password hash for stack
  set_fact:
    admin_password_hash: "{{ admin_password | password_hash('blowfish', rounds=12, salt=['swarmprom', fingerprint, filetime_result.stdout] | join('|') | hash('sha1') | truncate(21, True, '') + '.') }}"
  run_once: true

- git:
    repo: 'https://github.com/stefanprodan/swarmprom.git'
    dest: /opt/stacks/swarmprom
    version: master
  run_once: true

- name: Copy swarmprom stack file
  copy:
    src: files/swarmprom.stack.yml
    dest: /opt/stacks/swarmprom/docker-compose.custom.yml
  run_once: true

- name: Deploy swarmprom stack
  docker_stack:
    state: present
    name: swarmprom
    compose:
      - /opt/stacks/swarmprom/docker-compose.custom.yml
  environment:
    ADMIN_USER: "admin"
    ADMIN_PASSWORD: "{{ admin_password }}"
    DOMAIN: "admin.{{ domain_name }}"
    TRAEFIK_PUBLIC_TAG: traefik-public
  run_once: true

- name: wait for grafana to come up
  uri:
    validate_certs: yes
    method: GET
    url: "https://grafana.admin.{{ domain_name }}/"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 5
  run_once: true

- name: wait for prometheus to come up
  uri:
    validate_certs: yes
    method: GET
    url: "https://prometheus.admin.{{ domain_name }}/"
    status_code: 401
  register: result
  until: result.status == 401
  retries: 60
  delay: 5
  run_once: true

- name: wait for unsee to come up
  uri:
    validate_certs: yes
    method: GET
    url: "https://unsee.admin.{{ domain_name }}/"
    status_code: [200, 401]
  register: result
  until: result.status == 401
  retries: 60
  delay: 5
  run_once: true

- name: wait for alertmanager to come up
  uri:
    validate_certs: yes
    method: GET
    url: "https://alertmanager.admin.{{ domain_name }}/"
    status_code: 401
  register: result
  until: result.status == 401
  retries: 60
  delay: 5
  run_once: true
